name: Update Blocklists

on: 
  workflow_dispatch:

jobs:
  update_blocklists:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2.5.2
        with:
          node-version: '16.x'
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Update blocklists
        run: python3 auto.py
        env:
          SuperSecret: ${{ secrets.SuperSecret }}
      - name: Commit changes
        run: |
          git config --global user.email "kabbricenio@gmail.com"
          git config --global user.name "keanugithub"
          git add blocklists.txt
          git commit -m "auto update by script" --allow-empty
          # Use github-script action to push changes to remote repository
          # Requires 'repo' scope for the Personal Access Token
          # See https://github.com/actions/github-script#inputs
          - name: Push changes to remote repository
            uses: actions/github-script@v4
            with:
              github-token: ${{ secrets.SuperSecret }}
              script: |
                const { context, GitHub } = require('@actions/github');
                const github = new GitHub(context.token);
                const repo = context.repo;
                const branchName = process.env.GITHUB_REF.replace('refs/heads/', '');
                const commitMessage = "auto update by script";
                const commitSha = context.payload.head_commit.id;
                const filePath = "blocklists.txt";
                const fileContent = fs.readFileSync(filePath, 'utf-8');
                const newContent = Buffer.from(fileContent).toString('base64');
                try {
                  const { data } = await github.repos.createOrUpdateFileContents({
                    owner: repo.owner,
                    repo: repo.repo,
                    path: filePath,
                    message: commitMessage,
                    content: newContent,
                    sha: commitSha,
                    branch: branchName
                  });
                  console.log(data);
                } catch (error) {
                  console.log(error);
                }
          - name: Pull changes from remote repository
            run: git pull
